#! /usr/bin/env bash

DEPS="which help2man python git gzip rpmbuild"
if ! which $DEPS; then
	echo "This script requires the following binaries:"
	echo $DEPS
	echo "At least one of them is missing (or not in path)"
	exit 1
fi

VERSION=$(git describe --tags --dirty | cut -d '-' -f 1)
test -z "$VERSION" && VERSION="0.0_git$(git rev-parse --short HEAD)"
RELEASE=$(git describe --tags --dirty | cut -sd '-' -f 2- | sed 's|-|.|g')
test -z "$RELEASE" && RELEASE=0

# Parse the .in files
sed -e "s|%VERSION%|$VERSION|g" -e "s|%RELEASE%|$RELEASE|g" < dgt.spec.in > dgt.spec
sed -e "s|%VERSION%|$VERSION|g" -e "s|%RELEASE%|$RELEASE|g" < setup.py.in > setup.py

# Remove all the gzipped man pages
rm -f man1/*.gz

# Generate the man pages
export PYTHONPATH=".:$PYTHONPATH"
for i in ui/dgt-*;do
	echo $i | grep -q workflow- && continue
	out="man1/$(basename $i).1"
	help2man --no-info --version-string $VERSION ./$i > "$out"
	gzip -f "$out"
done
cd man1
for i in *.1;do
	gzip -kf $i
done
cd ..

# Create source tarball
python setup.py sdist -d .

# Create source rpm
rpmbuild \
	--define "_sourcedir $PWD" \
	--define "_specdir $PWD" \
	--define "_builddir $PWD" \
	--define "_srcrpmdir $PWD" \
	--define "_rpmdir $PWD" \
	--define "dist None" \
	--define "fedora 19" \
	--define "rhel 7" \
	--define "None 1" \
	--nodeps -bs "$PWD/dgt.spec"
